<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls"
    xmlns:mmvm="clr-namespace:EasyViewer.MainMenu.ViewModels"
    xmlns:mmv="clr-namespace:EasyViewer.MainMenu.Views">

    <!--#region TextBlocks-->
    
    <Style
        x:Key="DefaultTBlockStyle"
        TargetType="TextBlock">
        <Setter Property="FontSize" Value="20" />
        <Setter Property="FontFamily" Value="Comic Sans MS" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="Foreground" Value="Black" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
    </Style>
    <Style
        x:Key="CCComboBoxTBlockItemStyle"
        TargetType="TextBlock">
        <Setter Property="FontSize" Value="17" />
        <Setter Property="FontFamily" Value="Comic Sans MS" />
        <Setter Property="FontWeight" Value="DemiBold" />
        <Setter Property="Foreground" Value="Goldenrod" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
    </Style>
    <Style
        x:Key="SEDefaultTBlockStyle"
        TargetType="TextBlock">
        <Setter Property="FontSize" Value="20" />
        <Setter Property="FontFamily" Value="Comic Sans MS" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="Foreground" Value="Black" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
    </Style>
    <Style
        x:Key="MMDefaultTBlockStyle"
        TargetType="TextBlock">
        <Setter Property="FontSize" Value="16" />
        <Setter Property="FontFamily" Value="Comic Sans MS" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="Foreground" Value="Black" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
    </Style>
    <Style
        x:Key="DateTimeTBlockStyle"
        TargetType="TextBlock">
        <Setter Property="FontSize" Value="16" />
        <Setter Property="FontFamily" Value="Comic Sans MS" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="Black" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
    </Style>

    <!--#endregion-->

    <!--#region ListBoxItems-->

    <Style
        x:Key="MMItemsControlStyle"
        TargetType="{x:Type ItemsControl}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="Foreground" Value="AliceBlue" />
        <Setter Property="FontFamily" Value="Comic Sans MS" />
        <Setter Property="FontSize" Value="20" />
        <Setter Property="FontWeight" Value="Bold" />
        <!--<Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="OrangeRed" />
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="BorderBrush" Value="Transparent"/>
            </Trigger>
            <DataTrigger Binding="{Binding Checked}" Value="True">
                <Setter Property="Foreground" Value="GreenYellow" />
        -->
        <!--<Setter Property="BorderBrush" Value="LimeGreen"/>
                <Setter Property="BorderThickness" Value="2"/>-->
        <!--
            </DataTrigger>
        </Style.Triggers>-->
    </Style>

    <!--#endregion-->

    <!--#region Buttons-->

    <Style x:Key="DefaultMetroButtonStyle"
        TargetType="Button">
        <Style.BasedOn>
            <Style TargetType="{x:Type ButtonBase}">
                <Setter Property="Background" Value="{DynamicResource GrayBrush10}" />
                <Setter Property="BorderBrush" Value="{DynamicResource TextBoxBorderBrush}" />
                <Setter Property="BorderThickness" Value="1" />
                <Setter Property="mah:ControlsHelper.ContentCharacterCasing" Value="Upper" />
                <Setter Property="mah:ControlsHelper.CornerRadius" Value="3" />
                <Setter Property="FontFamily" Value="{DynamicResource DefaultFont}" />
                <Setter Property="FontSize" Value="{DynamicResource UpperCaseContentFontSize}" />
                <Setter Property="FontWeight" Value="Bold" />
                <Setter Property="Foreground" Value="{DynamicResource BlackBrush}" />
                <Setter Property="MinHeight" Value="25" />
                <Setter Property="Padding" Value="5,6" />
                <Setter Property="SnapsToDevicePixels" Value="True" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ButtonBase}">
                            <Grid>
                                <Border
                                    x:Name="Border"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    CornerRadius="{Binding (mah:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                <Border
                                    x:Name="DisabledVisualElement"
                                    Background="{DynamicResource ControlsDisabledBrush}"
                                    CornerRadius="{Binding (mah:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
                                    IsHitTestVisible="False"
                                    Opacity="0"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                <mah:ContentControlEx
                                    x:Name="PART_ContentPresenter"
                                    Margin="{TemplateBinding BorderThickness}"
                                    Padding="{TemplateBinding Padding}"
                                    HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                    Content="{TemplateBinding Content}"
                                    ContentCharacterCasing="{Binding (mah:ControlsHelper.ContentCharacterCasing), RelativeSource={RelativeSource TemplatedParent}}"
                                    ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                    ContentTemplate="{TemplateBinding ContentTemplate}"
                                    RecognizesAccessKey="True"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="Border" Property="Background" Value="{DynamicResource GrayBrush8}" />
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter TargetName="Border" Property="Background" Value="{DynamicResource GrayBrush7}" />
                                </Trigger>
                                <Trigger Property="IsKeyboardFocusWithin" Value="True">
                                    <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource ButtonMouseOverBorderBrush}" />
                                    <Setter TargetName="Border" Property="BorderThickness" Value="2" />
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter TargetName="DisabledVisualElement" Property="Opacity" Value="0.7" />
                                    <Setter TargetName="PART_ContentPresenter" Property="Opacity" Value="0.3" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </Style.BasedOn>
    </Style>

    <Style x:Key="StartButtonStyle"
        TargetType="{x:Type Button}">
        <Style.BasedOn>
            <Style TargetType="{x:Type ButtonBase}">
                <Setter Property="FontFamily" Value="Comic Sans MS" />
                <Setter Property="FontSize" Value="18" />
                <Setter Property="FontWeight" Value="Bold" />
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="BorderBrush" Value="Transparent" />
                <Setter Property="Foreground" Value="#FFC2B010" />
                <Setter Property="VerticalAlignment" Value="Center" />
                <Setter Property="HorizontalAlignment" Value="Center" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ButtonBase}">
                            <Grid>
                                <mah:ContentControlEx
                                    x:Name="PART_ContentPresenter"
                                    Content="{TemplateBinding Content}" />
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Foreground" Value="#FF1AA181" />
                                    <Setter Property="FontSize" Value="20" />
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter Property="Background" Value="Transparent" />
                                    <Setter Property="Foreground" Value="#FF30C210" />
                                </Trigger>
                                <Trigger Property="IsKeyboardFocusWithin" Value="True">
                                    <Setter Property="Background" Value="Transparent" />
                                    <Setter Property="Foreground" Value="#FF30C210" />
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Background" Value="Transparent" />
                                    <Setter Property="Foreground" Value="Gray" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </Style.BasedOn>
    </Style>

    <Style x:Key="ExitButtonStyle"
        TargetType="{x:Type Button}">
        <Style.BasedOn>
            <Style TargetType="{x:Type ButtonBase}">
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="BorderBrush" Value="Transparent" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ButtonBase}">
                            <Grid>
                                <Border
                                    x:Name="Border"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}" />
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="Border" Property="Background" Value="Transparent" />
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter TargetName="Border" Property="Background" Value="Transparent" />
                                </Trigger>
                                <Trigger Property="IsKeyboardFocusWithin" Value="True">
                                    <Setter TargetName="Border" Property="BorderBrush" Value="Transparent" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </Style.BasedOn>
    </Style>

    <Style x:Key="PlayPauseButtonStyle"
        TargetType="{x:Type Button}">
        <Style.BasedOn>
            <Style TargetType="{x:Type ButtonBase}">
                <!--<Setter Property="Background" Value="Transparent" />-->
                <Setter Property="BorderBrush" Value="Transparent" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ButtonBase}">
                            <Grid>
                                <Border
                                    x:Name="Border"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}" />
                            </Grid>
                            <!--<ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="Border" Property="Background" Value="Transparent" />
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter TargetName="Border" Property="Background" Value="Transparent" />
                                </Trigger>
                                <Trigger Property="IsKeyboardFocusWithin" Value="True">
                                    <Setter TargetName="Border" Property="BorderBrush" Value="Transparent" />
                                </Trigger>
                            </ControlTemplate.Triggers>-->
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </Style.BasedOn>
    </Style>

    <!--#endregion-->

    <!--#region ToggleButtons-->

    <Style
        x:Key="MMFilmListTButtonStyle"
        TargetType="{x:Type ToggleButton}">
        <Style.BasedOn>
            <Style TargetType="{x:Type ToggleButton}">
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="BorderBrush" Value="Transparent" />
                <Setter Property="Margin" Value="2.5" />
                <Setter Property="HorizontalContentAlignment" Value="Center" />
                <Setter Property="VerticalContentAlignment" Value="Center" />
                <Setter Property="SnapsToDevicePixels" Value="True" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ToggleButton}">
                            <Grid>
                                <Border
                                    x:Name="Border"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                <mah:ContentControlEx
                                    x:Name="PART_ContentPresenter"
                                    HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                    Content="{TemplateBinding Content}"
                                    RecognizesAccessKey="True"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </Style.BasedOn>
    </Style>

    <!--#endregion-->

    <!--#region TextBoxes-->
    <Style
        x:Key="SETBoxDefaultStyle"
        TargetType="TextBox">
        <Setter Property="FontFamily" Value="Comic Sans MS" />
        <Setter Property="FontSize" Value="16" />
        <Setter Property="FontWeight" Value="DemiBold" />
        <Setter Property="Margin" Value="5,0" />
    </Style>

    <Style
        x:Key="EpisodesCountTextBoxStyle"
        TargetType="{x:Type TextBox}">
        <Style.BasedOn>
            <Style TargetType="{x:Type TextBox}">
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="FontFamily" Value="Comic Sans MS" />
                <Setter Property="BorderBrush" Value="Transparent" />
                <Setter Property="ContextMenu" Value="{DynamicResource TextBoxMetroContextMenu}" />
                <Setter Property="FontSize" Value="16" />
                <Setter Property="FontWeight" Value="Bold" />
                <Setter Property="Foreground" Value="Black" />
                <Setter Property="MinHeight" Value="26" />
                <Setter Property="MinWidth" Value="40" />
                <Setter Property="HorizontalAlignment" Value="Center" />
                <Setter Property="VerticalAlignment" Value="Center" />
                <Setter Property="SnapsToDevicePixels" Value="True" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type TextBox}">
                            <ScrollViewer
                                x:Name="PART_ContentHost"
                                Margin="2"
                                VerticalAlignment="Stretch"
                                IsTabStop="False" />
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="BorderBrush" Value="Transparent" />
                                    <Setter Property="FontSize" Value="18" />
                                </Trigger>
                                <Trigger Property="IsFocused" Value="True">
                                    <Setter Property="BorderBrush" Value="Transparent" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </Style.BasedOn>
    </Style>

    <!--#endregion-->
</ResourceDictionary>
